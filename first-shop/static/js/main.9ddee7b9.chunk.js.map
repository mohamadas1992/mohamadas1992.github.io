{"version":3,"sources":["components/Navebar.js","components/ItemList.js","action.js","constants.js","components/Buy.js","components/Cart.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["Navebar","style","display","justifyContent","className","to","ItemList","handleClick","id","props","addToCart","items","this","itemList","length","map","item","key","src","image","alt","title","price","onClick","Component","connect","state","dispatch","type","Buy","handleChecked","e","target","checked","addShipping","substractShipping","ref","onChange","total","addedItems","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","quantity","App","exact","path","component","Home","Boolean","window","location","hostname","match","initStateCart","store","createStore","action","addedItem","find","existed_item","newTotal","itemToRemove","new_items","filter","console","log","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ddee7b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n const Navebar = ()=>{\r\n    return(\r\n    <div>\r\n        <nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n            <p className= 'f3 link dim black underline pa3 pointer'><Link to=\"/cart\">سبد خرید</Link></p>\r\n            <p className= 'f3 link dim black underline pa3 pointer'><Link to=\"/\">فروشگاه</Link></p>\r\n        </nav>\r\n    </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Navebar;\r\n\r\n","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addToCart } from '../action.js';\r\n\r\n\r\nclass ItemList extends Component{\r\n\r\n    handleClick = (id)=>{\r\n        this.props.addToCart(id);\r\n    }\r\n\r\n    render(){\r\n        const { items } = this.props;\r\n        let itemList = items.length ?(\r\n            items.map(item=>{\r\n                return(\r\n                       <div className = \"tc bg-light-blue dib pa3 ma2 bw2 shadow-5\"  key={item.id}>\r\n                            <img src={item.image} alt='itemimg' />\r\n                            <div>\r\n                                <p className='f6'>:نام کالا </p><h2 className=\"grow\">{item.title}</h2>\r\n                                <p className='f4'>{`${item.price}:قیمت`}</p>\r\n                               \r\n                                <button  className=\"f4 link dim black db pointer\"\r\n                                onClick={()=>{this.handleClick(item.id)}}>افزودن به سبد خرید</button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n        ):(<h2>لطفا منتظر باشید</h2>)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"box\">\r\n                    {itemList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        items: state.items\r\n    }\r\n  }\r\nconst mapDispatchToProps= (dispatch)=>{ \r\n    return{\r\n        addToCart: (id)=>{dispatch(addToCart(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ItemList);","import {ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY} from './constants.js'\r\n\r\n\r\nexport const addToCart= (id)=>{\r\n    return{\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n}\r\n//remove item action\r\nexport const removeItem=(id)=>{\r\n    return{\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n}\r\n//subtract qt action\r\nexport const subtractQuantity=(id)=>{\r\n    return{\r\n        type: SUB_QUANTITY,\r\n        id\r\n    }\r\n}\r\n//add qt action\r\nexport const addQuantity=(id)=>{\r\n    return{\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n}","\r\nexport const ADD_TO_CART='ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const ADD_SHIPPING = 'ADD_SHIPPING';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Buy extends Component{\r\n    handleChecked = (e)=>{\r\n        if(e.target.checked){\r\n            this.props.addShipping();\r\n        }\r\n        else{\r\n            this.props.substractShipping();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"tc\">\r\n                <ul className=\"list ph3 ph5-ns pv4\">\r\n                    <li className=\"dib mr1 mb2\" ><input type=\"checkbox\" ref=\"shipping\" onChange= {this.handleChecked} /></li>\r\n                    <li className=\"dib mr1 mb2\" ><p>ارسال (6)تومان</p></li>\r\n                    <li className=\"dib mr1 mb2\" ><b>جمع کل: {this.props.total} تومان</b></li>\r\n                </ul>\r\n                <button className=\"tc ph3 \">خرید</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        addedItems: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        addShipping: ()=>{dispatch({type: 'ADD_SHIPPING'})},\r\n        substractShipping: ()=>{dispatch({type: 'SUB_SHIPPING'})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Buy)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { removeItem,addQuantity,subtractQuantity } from '../action.js';\r\nimport Buy from './Buy.js';\r\n\r\nclass Cart extends Component{\r\n        //to remove the item completely\r\n        handleRemove = (id)=>{\r\n            this.props.removeItem(id);\r\n        }\r\n        //to add the quantity\r\n        handleAddQuantity = (id)=>{\r\n            this.props.addQuantity(id);\r\n        }\r\n        //to substruct from the quantity\r\n        handleSubtractQuantity = (id)=>{\r\n            this.props.subtractQuantity(id);\r\n        }\r\n    render(){\r\n              \r\n        let addedItems = this.props.items.length ?\r\n            (  \r\n                this.props.items.map(item=>{\r\n                    return(\r\n                        <article className=\"tc bg-light-red dib pa3 ma2 bw2 shadow-4\"  key={item.id}>\r\n                            <img src={item.image} className=\"db w-100 br2 br--top\" alt={item.image}/>\r\n                            <div className=\"pa2 ph3-ns pb3-ns\">\r\n                                <div className=\"dt w-100 mt1\">\r\n                                    <div className=\"dtc tl\">\r\n                                        <h1 className=\"f6\">{item.title}</h1>\r\n                                    </div>\r\n                                    <div className=\"dtc tr\">\r\n                                        <h2 className=\"f7 \">{item.price}تومان</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <ul className=\"list ph3 ph5-ns pv4\">\r\n                                    <li className=\"dib mr1 mb2\" onClick={()=>{this.handleAddQuantity(item.id)}}><Link to=\"/cart\" className=\"f7 f6-ns b db pa2 link dim dark-gray ba b--black-20\">+</Link></li>\r\n                                    <li className=\"dib mr1 mb2\" onClick={()=>{this.handleRemove(item.id)}}><p className=\"f7 f6-ns b db pa2 link dim dark-gray ba b--black-20\">تعداد: {item.quantity}</p></li>\r\n                                    <li className=\"dib mr1 mb2\" onClick={()=>{this.handleSubtractQuantity(item.id)}}><Link to=\"/cart\" className=\"f7 f6-ns b db pa2 link dim dark-gray ba b--black-20\">-</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </article>                       \r\n                    )\r\n                })\r\n            ):\r\n\r\n             (\r\n                <p className=\"f1 ttu tracked-tight mt0\">سبد خرید شما خالی است</p>\r\n             )\r\n       return(\r\n            <div className=\"container\">\r\n                <div className=\"cart \">\r\n                    <h5 className=\"tc\">سبد خرید شما</h5>\r\n                    <ul className=\"tc \">\r\n                        {addedItems}\r\n                    </ul>\r\n                </div>  \r\n                <Buy/>\r\n            </div>\r\n       )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.addedItems\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        removeItem: (id)=>{dispatch(removeItem(id))},\r\n        addQuantity: (id)=>{dispatch(addQuantity(id))},\r\n        subtractQuantity: (id)=>{dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart)","import React,{Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Navebar from './components/Navebar';\nimport Home from './components/ItemList';\nimport Cart from './components/Cart'\n\n\n\n\n\nclass App extends Component {\n \n\n  render(){\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n            \n              <Navebar/>\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/cart\" component={Cart}/>\n                  </Switch>\n             </div>\n       </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING} from './constants.js'\r\nimport _products from './api/products.json';\r\n\r\nconst initStateCart = {\r\n    items:_products ,\r\n     addedItems:[],\r\n     total: 0\r\n}\r\n\r\nexport const cartReducer= (state = initStateCart,action)=>{\r\n       //INSIDE HOME COMPONENT\r\n       if(action.type === ADD_TO_CART){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n       let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n       if(existed_item)\r\n       {\r\n          addedItem.quantity += 1 \r\n           return{\r\n              ...state,\r\n               total: state.total + addedItem.price \r\n                }\r\n      }\r\n       else{\r\n          addedItem.quantity = 1;\r\n          //calculating the total\r\n          let newTotal = state.total + addedItem.price \r\n          \r\n          return{\r\n              ...state,\r\n              addedItems: [...state.addedItems, addedItem],\r\n              total : newTotal\r\n          }\r\n          \r\n      }\r\n  }\r\n  if(action.type === REMOVE_ITEM){\r\n      let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n      let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n      \r\n      //calculating the total\r\n      let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n      console.log(itemToRemove)\r\n      return{\r\n          ...state,\r\n          addedItems: new_items,\r\n          total: newTotal\r\n      }\r\n  }\r\n  //INSIDE CART COMPONENT\r\n  if(action.type=== ADD_QUANTITY){\r\n      let addedItem = state.items.find(item=> item.id === action.id)\r\n        addedItem.quantity += 1 \r\n        let newTotal = state.total + addedItem.price\r\n        return{\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n  }\r\n  if(action.type=== SUB_QUANTITY){  \r\n      let addedItem = state.items.find(item=> item.id === action.id) \r\n      //if the qt == 0 then it should be removed\r\n      if(addedItem.quantity === 1){\r\n          let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n          let newTotal = state.total - addedItem.price\r\n          return{\r\n              ...state,\r\n              addedItems: new_items,\r\n              total: newTotal\r\n          }\r\n      }\r\n      else {\r\n          addedItem.quantity -= 1\r\n          let newTotal = state.total - addedItem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n      }\r\n      \r\n  }\r\n///shoping maliat + -\r\n  if(action.type=== ADD_SHIPPING){\r\n        return{\r\n            ...state,\r\n            total: state.total + 6\r\n        }\r\n  }\r\n\r\n  if(action.type=== 'SUB_SHIPPING'){\r\n      return{\r\n          ...state,\r\n          total: state.total - 6\r\n      }\r\n}\r\n ///////////add state to ItemList \r\nelse{\r\n  return state\r\n  }\r\n  \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport { cartReducer } from './reducers';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}