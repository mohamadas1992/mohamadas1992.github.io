{"version":3,"sources":["logo.svg","Todos.js","AddTodo.js","Footer.js","Scroll.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Todos","state","isBoxVisible","toggleBox","setState","prevState","IconButton","color","this","props","content","onClick","className","deletetodo","TextField","value","onChange","edittodo","margin","inputProps","style","Component","AddTodo","handleChange","e","target","handleSubmit","preventDefault","addTodo","onSubmit","label","variant","InputLabelProps","fontSize","Footer","Container","maxWidth","Typography","align","Link","href","Date","getFullYear","Fab","size","aria-label","Scroll","overflowY","height","width","marginTop","children","App","items","id","filter","item","event","itemIndex","findIndex","i","Math","random","src","logo","alt","length","map","todos","key","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","light","main","dark","secondary","typography","useNextVariants","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.408381bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React ,{Component} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport CheckBox from '@material-ui/icons/CheckBox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nclass Todos extends Component {\r\n    state = {\r\n        isBoxVisible:false\r\n      };\r\n    toggleBox = () => {\r\n        this.setState(prevState => ({ isBoxVisible: !prevState.isBoxVisible }));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <IconButton color='red'>\r\n                        <CheckBox />\r\n                    </IconButton>\r\n                    {this.props.content} \r\n                    <Edit \r\n                        onClick={this.toggleBox}\r\n                        className='btns'\r\n                    />\r\n                    <Delete \r\n                        onClick={this.props.deletetodo}\r\n                        className='btns' \r\n                    />\r\n                </p>\r\n                <TextField \r\n                        value={this.props.content}\r\n                        onChange={this.props.edittodo}\r\n                        margin=\"normal\"\r\n                        className={`txtfileds ${this.state.isBoxVisible? \"\": \"hide\"}`}\r\n                        inputProps={{ style: { color: 'white'}}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todos\r\n\r\n","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Addbox from '@material-ui/icons/AddBox';\r\n\r\nclass AddTodo extends Component {\r\n    state={\r\n        content: ''\r\n    }\r\n    handleChange =(e) =>{\r\n        this.setState({\r\n            content:e.target.value\r\n        })\r\n    }\r\n    handleSubmit =(e) => {\r\n            e.preventDefault();\r\n            this.props.addTodo(this.state);\r\n            this.setState({\r\n                content:''\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField \r\n                        label=\"Add New Item Here\"\r\n                        value={this.state.content}\r\n                        onChange={this.handleChange}\r\n                        variant=\"filled\"\r\n                        className=\"txtfileds \"\r\n                        inputProps={{ style: { color: 'white'}}}\r\n                        InputLabelProps={{ style: { color: 'white'}}}\r\n                    />\r\n                    <Addbox \r\n                        style={{ fontSize: 50 }}\r\n                        className=\"btnAdd\"\r\n                        onClick={this.handleSubmit}\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n const Footer=() =>{\r\n    return (\r\n        <div>\r\n            <footer className='footer'>\r\n                <Container maxWidth=\"sm\">\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                        {'Â© '}\r\n                        <Link color=\"inherit\" href=\"https://www.linkedin.com/in/mohammad-ahmad-safaei-324910133\">\r\n                        Mohammad Ahmad Safaei\r\n                        </Link>{` `}\r\n                        {new Date().getFullYear()}\r\n                        {'  '}\r\n                        <Link href='mailto:mohamadas1992@gmail.com'>\r\n                            <Fab size=\"small\" color=\"primary\" aria-label=\"email\">\r\n                                <MailIcon />\r\n                            </Fab>\r\n                        </Link>\r\n                    </Typography>\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n    return(\r\n    <div style={{overflowY: 'scroll',height:'64vh',width:'100%',marginTop:'20px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Todos from './Todos';\nimport AddTodo from './AddTodo';\nimport Footer from './Footer';\nimport Scroll from './Scroll';\n\n\nclass App extends Component {\n\n  state={\n    items:[]\n  }\n  deletetodo = (id) =>{\n    const items= this.state.items.filter(item =>{\n      return item.id !== id\n    });\n    this.setState({\n      items: items\n    })\n  }\n  edittodo = (event,id) =>{\n    const itemIndex = this.state.items.findIndex(i =>{\n      return i.id === id;\n    });\n    const item = {\n      ...this.state.items[itemIndex]\n    };\n    item.content = event.target.value;\n    const items = [...this.state.items];\n    items[itemIndex] = item;\n    this.setState({\n      items:items\n    })\n  }\n  addTodo = (item) =>{\n    if(item.content !== ''){\n      item.id = Math.random();\n      let items = [...this.state.items,item]\n      this.setState({\n        items:items\n      })\n    }\n  }\n \n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <AddTodo addTodo={this.addTodo}/>\n          <Scroll>\n          {\n            (this.state.items.length)?(\n            this.state.items.map(todos =>{\n              return <Todos\n                key={todos.id}\n                content={todos.content}\n                edittodo={(event)=>this.edittodo(event,todos.id)}\n                deletetodo={()=>this.deletetodo(todos.id)}/>\n            })):(<p>Not yet item</p>)\n          }\n          </Scroll>\n        </header>\n        <Footer />\n      </div>\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';  \n\n\nconst theme = createMuiTheme({\n    palette: {\n       primary: {\n          light: '#ff5252',\n          main: 'rgb(23, 105, 170)',\n          dark: '#000'\n       },\n       secondary: {\n         main: '#673ab7',\n       },\n    },\n    typography: { \n       useNextVariants: true\n    }\n });\n\nReactDOM.render(\n    <MuiThemeProvider theme = { theme }>\n       <App />\n    </MuiThemeProvider>, \n    document.getElementById('root')\n );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}